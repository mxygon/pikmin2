.include "macros.inc"

.section .text, "ax"  # 0x800056C0 - 0x80472F00
.global OSInitMessageQueue
OSInitMessageQueue:
/* 800EF4BC 000EC3FC  7C 08 02 A6 */	mflr r0
/* 800EF4C0 000EC400  90 01 00 04 */	stw r0, 4(r1)
/* 800EF4C4 000EC404  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 800EF4C8 000EC408  93 E1 00 24 */	stw r31, 0x24(r1)
/* 800EF4CC 000EC40C  3B E5 00 00 */	addi r31, r5, 0
/* 800EF4D0 000EC410  93 C1 00 20 */	stw r30, 0x20(r1)
/* 800EF4D4 000EC414  3B C4 00 00 */	addi r30, r4, 0
/* 800EF4D8 000EC418  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 800EF4DC 000EC41C  3B A3 00 00 */	addi r29, r3, 0
/* 800EF4E0 000EC420  48 00 24 D5 */	bl OSInitThreadQueue
/* 800EF4E4 000EC424  38 7D 00 08 */	addi r3, r29, 8
/* 800EF4E8 000EC428  48 00 24 CD */	bl OSInitThreadQueue
/* 800EF4EC 000EC42C  93 DD 00 10 */	stw r30, 0x10(r29)
/* 800EF4F0 000EC430  38 00 00 00 */	li r0, 0
/* 800EF4F4 000EC434  93 FD 00 14 */	stw r31, 0x14(r29)
/* 800EF4F8 000EC438  90 1D 00 18 */	stw r0, 0x18(r29)
/* 800EF4FC 000EC43C  90 1D 00 1C */	stw r0, 0x1c(r29)
/* 800EF500 000EC440  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 800EF504 000EC444  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 800EF508 000EC448  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 800EF50C 000EC44C  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 800EF510 000EC450  38 21 00 28 */	addi r1, r1, 0x28
/* 800EF514 000EC454  7C 08 03 A6 */	mtlr r0
/* 800EF518 000EC458  4E 80 00 20 */	blr 

.global OSSendMessage
OSSendMessage:
/* 800EF51C 000EC45C  7C 08 02 A6 */	mflr r0
/* 800EF520 000EC460  90 01 00 04 */	stw r0, 4(r1)
/* 800EF524 000EC464  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 800EF528 000EC468  93 E1 00 24 */	stw r31, 0x24(r1)
/* 800EF52C 000EC46C  3B E5 00 00 */	addi r31, r5, 0
/* 800EF530 000EC470  93 C1 00 20 */	stw r30, 0x20(r1)
/* 800EF534 000EC474  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 800EF538 000EC478  3B A4 00 00 */	addi r29, r4, 0
/* 800EF53C 000EC47C  93 81 00 18 */	stw r28, 0x18(r1)
/* 800EF540 000EC480  3B 83 00 00 */	addi r28, r3, 0
/* 800EF544 000EC484  4B FF F6 F5 */	bl OSDisableInterrupts
/* 800EF548 000EC488  3B C3 00 00 */	addi r30, r3, 0
/* 800EF54C 000EC48C  57 FF 07 FE */	clrlwi r31, r31, 0x1f
/* 800EF550 000EC490  48 00 00 24 */	b lbl_800EF574
lbl_800EF554:
/* 800EF554 000EC494  2C 1F 00 00 */	cmpwi r31, 0
/* 800EF558 000EC498  40 82 00 14 */	bne lbl_800EF56C
/* 800EF55C 000EC49C  7F C3 F3 78 */	mr r3, r30
/* 800EF560 000EC4A0  4B FF F7 01 */	bl OSRestoreInterrupts
/* 800EF564 000EC4A4  38 60 00 00 */	li r3, 0
/* 800EF568 000EC4A8  48 00 00 5C */	b lbl_800EF5C4
lbl_800EF56C:
/* 800EF56C 000EC4AC  7F 83 E3 78 */	mr r3, r28
/* 800EF570 000EC4B0  48 00 33 7D */	bl OSSleepThread
lbl_800EF574:
/* 800EF574 000EC4B4  80 DC 00 14 */	lwz r6, 0x14(r28)
/* 800EF578 000EC4B8  80 9C 00 1C */	lwz r4, 0x1c(r28)
/* 800EF57C 000EC4BC  7C 06 20 00 */	cmpw r6, r4
/* 800EF580 000EC4C0  40 81 FF D4 */	ble lbl_800EF554
/* 800EF584 000EC4C4  80 1C 00 18 */	lwz r0, 0x18(r28)
/* 800EF588 000EC4C8  38 7C 00 08 */	addi r3, r28, 8
/* 800EF58C 000EC4CC  80 BC 00 10 */	lwz r5, 0x10(r28)
/* 800EF590 000EC4D0  7C 80 22 14 */	add r4, r0, r4
/* 800EF594 000EC4D4  7C 04 33 D6 */	divw r0, r4, r6
/* 800EF598 000EC4D8  7C 00 31 D6 */	mullw r0, r0, r6
/* 800EF59C 000EC4DC  7C 00 20 50 */	subf r0, r0, r4
/* 800EF5A0 000EC4E0  54 00 10 3A */	slwi r0, r0, 2
/* 800EF5A4 000EC4E4  7F A5 01 2E */	stwx r29, r5, r0
/* 800EF5A8 000EC4E8  80 9C 00 1C */	lwz r4, 0x1c(r28)
/* 800EF5AC 000EC4EC  38 04 00 01 */	addi r0, r4, 1
/* 800EF5B0 000EC4F0  90 1C 00 1C */	stw r0, 0x1c(r28)
/* 800EF5B4 000EC4F4  48 00 34 25 */	bl OSWakeupThread
/* 800EF5B8 000EC4F8  7F C3 F3 78 */	mr r3, r30
/* 800EF5BC 000EC4FC  4B FF F6 A5 */	bl OSRestoreInterrupts
/* 800EF5C0 000EC500  38 60 00 01 */	li r3, 1
lbl_800EF5C4:
/* 800EF5C4 000EC504  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 800EF5C8 000EC508  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 800EF5CC 000EC50C  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 800EF5D0 000EC510  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 800EF5D4 000EC514  83 81 00 18 */	lwz r28, 0x18(r1)
/* 800EF5D8 000EC518  38 21 00 28 */	addi r1, r1, 0x28
/* 800EF5DC 000EC51C  7C 08 03 A6 */	mtlr r0
/* 800EF5E0 000EC520  4E 80 00 20 */	blr 

.global OSReceiveMessage
OSReceiveMessage:
/* 800EF5E4 000EC524  7C 08 02 A6 */	mflr r0
/* 800EF5E8 000EC528  90 01 00 04 */	stw r0, 4(r1)
/* 800EF5EC 000EC52C  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 800EF5F0 000EC530  93 E1 00 24 */	stw r31, 0x24(r1)
/* 800EF5F4 000EC534  3B E3 00 00 */	addi r31, r3, 0
/* 800EF5F8 000EC538  93 C1 00 20 */	stw r30, 0x20(r1)
/* 800EF5FC 000EC53C  3B C5 00 00 */	addi r30, r5, 0
/* 800EF600 000EC540  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 800EF604 000EC544  93 81 00 18 */	stw r28, 0x18(r1)
/* 800EF608 000EC548  3B 84 00 00 */	addi r28, r4, 0
/* 800EF60C 000EC54C  4B FF F6 2D */	bl OSDisableInterrupts
/* 800EF610 000EC550  3B A3 00 00 */	addi r29, r3, 0
/* 800EF614 000EC554  57 DE 07 FE */	clrlwi r30, r30, 0x1f
/* 800EF618 000EC558  48 00 00 24 */	b lbl_800EF63C
lbl_800EF61C:
/* 800EF61C 000EC55C  2C 1E 00 00 */	cmpwi r30, 0
/* 800EF620 000EC560  40 82 00 14 */	bne lbl_800EF634
/* 800EF624 000EC564  7F A3 EB 78 */	mr r3, r29
/* 800EF628 000EC568  4B FF F6 39 */	bl OSRestoreInterrupts
/* 800EF62C 000EC56C  38 60 00 00 */	li r3, 0
/* 800EF630 000EC570  48 00 00 70 */	b lbl_800EF6A0
lbl_800EF634:
/* 800EF634 000EC574  38 7F 00 08 */	addi r3, r31, 8
/* 800EF638 000EC578  48 00 32 B5 */	bl OSSleepThread
lbl_800EF63C:
/* 800EF63C 000EC57C  80 1F 00 1C */	lwz r0, 0x1c(r31)
/* 800EF640 000EC580  2C 00 00 00 */	cmpwi r0, 0
/* 800EF644 000EC584  41 82 FF D8 */	beq lbl_800EF61C
/* 800EF648 000EC588  28 1C 00 00 */	cmplwi r28, 0
/* 800EF64C 000EC58C  41 82 00 18 */	beq lbl_800EF664
/* 800EF650 000EC590  80 1F 00 18 */	lwz r0, 0x18(r31)
/* 800EF654 000EC594  80 7F 00 10 */	lwz r3, 0x10(r31)
/* 800EF658 000EC598  54 00 10 3A */	slwi r0, r0, 2
/* 800EF65C 000EC59C  7C 03 00 2E */	lwzx r0, r3, r0
/* 800EF660 000EC5A0  90 1C 00 00 */	stw r0, 0(r28)
lbl_800EF664:
/* 800EF664 000EC5A4  80 BF 00 18 */	lwz r5, 0x18(r31)
/* 800EF668 000EC5A8  7F E3 FB 78 */	mr r3, r31
/* 800EF66C 000EC5AC  80 9F 00 14 */	lwz r4, 0x14(r31)
/* 800EF670 000EC5B0  38 A5 00 01 */	addi r5, r5, 1
/* 800EF674 000EC5B4  7C 05 23 D6 */	divw r0, r5, r4
/* 800EF678 000EC5B8  7C 00 21 D6 */	mullw r0, r0, r4
/* 800EF67C 000EC5BC  7C 00 28 50 */	subf r0, r0, r5
/* 800EF680 000EC5C0  90 1F 00 18 */	stw r0, 0x18(r31)
/* 800EF684 000EC5C4  80 9F 00 1C */	lwz r4, 0x1c(r31)
/* 800EF688 000EC5C8  38 04 FF FF */	addi r0, r4, -1
/* 800EF68C 000EC5CC  90 1F 00 1C */	stw r0, 0x1c(r31)
/* 800EF690 000EC5D0  48 00 33 49 */	bl OSWakeupThread
/* 800EF694 000EC5D4  7F A3 EB 78 */	mr r3, r29
/* 800EF698 000EC5D8  4B FF F5 C9 */	bl OSRestoreInterrupts
/* 800EF69C 000EC5DC  38 60 00 01 */	li r3, 1
lbl_800EF6A0:
/* 800EF6A0 000EC5E0  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 800EF6A4 000EC5E4  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 800EF6A8 000EC5E8  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 800EF6AC 000EC5EC  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 800EF6B0 000EC5F0  83 81 00 18 */	lwz r28, 0x18(r1)
/* 800EF6B4 000EC5F4  38 21 00 28 */	addi r1, r1, 0x28
/* 800EF6B8 000EC5F8  7C 08 03 A6 */	mtlr r0
/* 800EF6BC 000EC5FC  4E 80 00 20 */	blr 

.global OSJamMessage
OSJamMessage:
/* 800EF6C0 000EC600  7C 08 02 A6 */	mflr r0
/* 800EF6C4 000EC604  90 01 00 04 */	stw r0, 4(r1)
/* 800EF6C8 000EC608  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 800EF6CC 000EC60C  93 E1 00 24 */	stw r31, 0x24(r1)
/* 800EF6D0 000EC610  3B E3 00 00 */	addi r31, r3, 0
/* 800EF6D4 000EC614  93 C1 00 20 */	stw r30, 0x20(r1)
/* 800EF6D8 000EC618  3B C5 00 00 */	addi r30, r5, 0
/* 800EF6DC 000EC61C  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 800EF6E0 000EC620  93 81 00 18 */	stw r28, 0x18(r1)
/* 800EF6E4 000EC624  3B 84 00 00 */	addi r28, r4, 0
/* 800EF6E8 000EC628  4B FF F5 51 */	bl OSDisableInterrupts
/* 800EF6EC 000EC62C  3B A3 00 00 */	addi r29, r3, 0
/* 800EF6F0 000EC630  57 DE 07 FE */	clrlwi r30, r30, 0x1f
/* 800EF6F4 000EC634  48 00 00 24 */	b lbl_800EF718
lbl_800EF6F8:
/* 800EF6F8 000EC638  2C 1E 00 00 */	cmpwi r30, 0
/* 800EF6FC 000EC63C  40 82 00 14 */	bne lbl_800EF710
/* 800EF700 000EC640  7F A3 EB 78 */	mr r3, r29
/* 800EF704 000EC644  4B FF F5 5D */	bl OSRestoreInterrupts
/* 800EF708 000EC648  38 60 00 00 */	li r3, 0
/* 800EF70C 000EC64C  48 00 00 68 */	b lbl_800EF774
lbl_800EF710:
/* 800EF710 000EC650  7F E3 FB 78 */	mr r3, r31
/* 800EF714 000EC654  48 00 31 D9 */	bl OSSleepThread
lbl_800EF718:
/* 800EF718 000EC658  80 BF 00 14 */	lwz r5, 0x14(r31)
/* 800EF71C 000EC65C  80 1F 00 1C */	lwz r0, 0x1c(r31)
/* 800EF720 000EC660  7C 05 00 00 */	cmpw r5, r0
/* 800EF724 000EC664  40 81 FF D4 */	ble lbl_800EF6F8
/* 800EF728 000EC668  80 9F 00 18 */	lwz r4, 0x18(r31)
/* 800EF72C 000EC66C  38 05 FF FF */	addi r0, r5, -1
/* 800EF730 000EC670  38 7F 00 08 */	addi r3, r31, 8
/* 800EF734 000EC674  7C 84 02 14 */	add r4, r4, r0
/* 800EF738 000EC678  7C 04 2B D6 */	divw r0, r4, r5
/* 800EF73C 000EC67C  7C 00 29 D6 */	mullw r0, r0, r5
/* 800EF740 000EC680  7C 00 20 50 */	subf r0, r0, r4
/* 800EF744 000EC684  90 1F 00 18 */	stw r0, 0x18(r31)
/* 800EF748 000EC688  80 1F 00 18 */	lwz r0, 0x18(r31)
/* 800EF74C 000EC68C  80 9F 00 10 */	lwz r4, 0x10(r31)
/* 800EF750 000EC690  54 00 10 3A */	slwi r0, r0, 2
/* 800EF754 000EC694  7F 84 01 2E */	stwx r28, r4, r0
/* 800EF758 000EC698  80 9F 00 1C */	lwz r4, 0x1c(r31)
/* 800EF75C 000EC69C  38 04 00 01 */	addi r0, r4, 1
/* 800EF760 000EC6A0  90 1F 00 1C */	stw r0, 0x1c(r31)
/* 800EF764 000EC6A4  48 00 32 75 */	bl OSWakeupThread
/* 800EF768 000EC6A8  7F A3 EB 78 */	mr r3, r29
/* 800EF76C 000EC6AC  4B FF F4 F5 */	bl OSRestoreInterrupts
/* 800EF770 000EC6B0  38 60 00 01 */	li r3, 1
lbl_800EF774:
/* 800EF774 000EC6B4  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 800EF778 000EC6B8  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 800EF77C 000EC6BC  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 800EF780 000EC6C0  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 800EF784 000EC6C4  83 81 00 18 */	lwz r28, 0x18(r1)
/* 800EF788 000EC6C8  38 21 00 28 */	addi r1, r1, 0x28
/* 800EF78C 000EC6CC  7C 08 03 A6 */	mtlr r0
/* 800EF790 000EC6D0  4E 80 00 20 */	blr 
